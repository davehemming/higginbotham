buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

group = projectGroup

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
	baseName = 'higginbotham'
	version =  '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.postgresql:postgresql:9.4-1206-jdbc42')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

task deployToAws(type: Exec) {

	if (!project.hasProperty('key')) {
		throw new GradleException("Error: Missing AWS public key argument. " +
				"Rerun with argument -Pkey=/your/aws/key/pair/location/aws-key-pair-name.pem")
	}

	workingDir "../environment"
	executable "sh"
	args "-c", "source aws-env-setup.sh -k ${project.getProperty('key')}"
//	standardOutput = hashStdOut

}
